[[_git_tools]]
== Mga Kagamitan ng Git

Sa ngayon, natutunan mo na ang karamahian sa mga pang-araw-araw na utos at mga workflow na kinakailangan mo upang mapamahalaan o mapanatili ang isang repositoryo ng Git para sa kontrol ng iyong source code.
Natapos mo ang mga pangunahing gawain sa pagsusubaybay at pag-commit ng mga file, at narendahan ka sa kapangyarihan ng staging na lawak at magaan na pag-branch ng paksa at pagsama-sama.

Ngayon sasaliksikin mo ang bilang ng napakamakapangyarihan na mga bagay na magagawa ng Git na hindi mo kinakailangang gamitin sa pag-araw-araw ngunit maaari mong kakailanganin sa ilang punto.

include::sections/revision-selection.asc[]

include::sections/interactive-staging.asc[]

include::sections/stashing-cleaning.asc[]

include::sections/signing.asc[]

include::sections/searching.asc[]

include::sections/rewriting-history.asc[]

include::sections/reset.asc[]

include::sections/advanced-merging.asc[]

include::sections/rerere.asc[]

include::sections/debugging.asc[]

include::sections/submodules.asc[]

include::sections/bundling.asc[]

include::sections/replace.asc[]

include::sections/credentials.asc[]

=== Buod

Nakita mo ang bilang ng mga pinahusay ng mga kagamitan na nagpapahintulot sa iyo na manipulahin ang iyong mga commit at staging na lawak na mas tiyak.
Kapag napansin mo ang mga isyu, dapat mong madaling malaman kung ano ang ipinakilala sa kanila, kailan, at sa pamamagitan ng kanino.
Kung nais mong gumamit ng mga subproject sa iyong proyekto, natutunan mo kung paano tanggapin ang mga pangangailangang iyon.
Sa puntong ito, dapat dapat mong magawa ang karamihan sa mga bagay sa Git na kakailanganin mo sa command line sa pang-araw-araw at maging kumportable na gawin ito.

