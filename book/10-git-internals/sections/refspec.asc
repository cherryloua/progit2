[[_refspec]]
=== Ang Refspec

Sa buong aklat na ito, ginamit namin ang simpleng pagmapa mula sa remote na mga sanga patungo sa mga lokal na reperensiya, ngunit maaring maging mas komplikado ang mga ito.
Ipagpalagay na sumunod ka sa mga huling pares na mga seksyon at nakagawa ng isang maliit na lokal na Git repository, at ngayon ay nais magdagdag ng _remote_ nito:

[source,console]
----
$ git remote add origin https://github.com/schacon/simplegit-progit
----

Ang pagpapatakbo ng command na nasa ibabaw ay magdaragdag ng seksyon sa `.git/config` na file ng iyong repository, na tumutukoy sa pangalan ng remote (`origin`), ang URL ng remote na repository, at ang _refspec_ na gagamitin para sa pagkuha:

[source,ini]
----
[remote "origin"]
	url = https://github.com/schacon/simplegit-progit
	fetch = +refs/heads/*:refs/remotes/origin/*
----

Ang format ng refspec ay, una, ang opsyonal na `+`, sinusundan ng `<src>:<dst>`, kung saan ang `<src>` ay ang pattern para sa mga reperensiya sa remote na bahagi at `<dst>` ay kung saan ang mga reperensiya ay susubaybayan nang lokal.
Ang `+` ay nagsasabi sa Git na i-update ang reperensiya kahit na ito ay hindi isang mabilis na pasulong.

Sa default na kaso na awtomatikong isinulat ng isang `git remote add` na command, kinukuha ng Git ang lahat ng mga reperensiya sa ilalim ng mga `refs/heads/` sa server at sinusulat ito sa `refs/remotes/origin/` nang lokal.
Kaya, kung mayroong isang master na sanga sa server, maaari mong ma-access ang log ng sanga na iyon nang lokal gamit ang alinman sa mga sumusunod:

[source,console]
----
$ git log origin/master
$ git log remotes/origin/master
$ git log refs/remotes/origin/master
----

Lahat ng mga ito ay magkatumbas, sapagkat pinapalawak ng Git ang mga ito sa `refs/remotes/origin/master`.

Kung nais mong kunin ng Git ang `master` na sanga lang sa bawat pagkakataon, at hindi lahat ng ibang mga sanga sa remote na server, maari mong baguhin ang linya ng pagkuha upang sumangguni sa sanga na iyon lamang:

[source]
----
fetch = +refs/heads/master:refs/remotes/origin/master
----

Ito ay default lamang na refspec para sa `git fetch` para sa remote na iyon.

Kung nais mong gawin ang isang beses lamang na pagkuha, maaari mo ring tukuyin ang partikular na refspec sa command line.
Upang kunin ang `master` na branch sa remote patungo sa `origin/mymaster` nang lokal, maaring patakbuhin ang:

[source,console]
----
$ git fetch origin master:refs/remotes/origin/mymaster
----

Maaring ring magtukoy ng maraming mga refspecs.
Sa command line, maaari mong kunin ang ilang mga sanga tulad nito:

[source,console]
----
$ git fetch origin master:refs/remotes/origin/mymaster \
	 topic:refs/remotes/origin/topic
From git@github.com:schacon/simplegit
 ! [rejected]        master     -> origin/mymaster  (non fast forward)
 * [new branch]      topic      -> origin/topic
----

Sa kasong ito, ang `master` na branch na pull ay tinanggihan dahil hindi ito nakalista bilang mabilis na pasulong na reperensiya.
Maari mo itong sapawan sa pamamagitan ng pagdagdag ng `+` sa unang bahagi ng refspec.

Maaari mo ring tukuyin ang maramihang mga refspec sa iyong configuration file para sa pagkuha.
Kung nais mong palaging kunin ang `master` at `experiment` na mga sanga mula sa `origin` na remote, idagdag ang dalawang linya:

[source,ini]
----
[remote "origin"]
	url = https://github.com/schacon/simplegit-progit
	fetch = +refs/heads/master:refs/remotes/origin/master
	fetch = +refs/heads/experiment:refs/remotes/origin/experiment
----

Hindi mo maaring gamiting ang 
You can't use bahagyang globs sa pattern, kaya't ito ay hindi wasto:

[source,ini]
----
fetch = +refs/heads/qa*:refs/remotes/origin/qa*
----

However, you can use namespaces (or directories) to accomplish something like that.
If you have a QA team that pushes a series of branches, and you want to get the `master` branch and any of the QA team's branches but nothing else, you can use a config section like this:

[source,ini]
----
[remote "origin"]
	url = https://github.com/schacon/simplegit-progit
	fetch = +refs/heads/master:refs/remotes/origin/master
	fetch = +refs/heads/qa/*:refs/remotes/origin/qa/*
----

If you have a complex workflow process that has a QA team pushing branches, developers pushing branches, and integration teams pushing and collaborating on remote branches, you can namespace them easily this way.

[[_pushing_refspecs]]
==== Pushing Refspecs

It's nice that you can fetch namespaced references that way, but how does the QA team get their branches into a `qa/` namespace in the first place?
You accomplish that by using refspecs to push.

If the QA team wants to push their `master` branch to `qa/master` on the remote server, they can run

[source,console]
----
$ git push origin master:refs/heads/qa/master
----

If they want Git to do that automatically each time they run `git push origin`, they can add a `push` value to their config file:

[source,ini]
----
[remote "origin"]
	url = https://github.com/schacon/simplegit-progit
	fetch = +refs/heads/*:refs/remotes/origin/*
	push = refs/heads/master:refs/heads/qa/master
----

Again, this will cause a `git push origin` to push the local `master` branch to the remote `qa/master` branch by default.

==== Pagtanggal Ng Mga Reperensiya

Maari mo ring gamitin ang refspec upang tanggalin ang mga reperensiya mula sa remote na server sa pamamagitan ng pagpapatakbao ng tulad nito:

[source,console]
----
$ git push origin :topic
----



Dahil ang refspec ay `<src>:<dst>`, sa pamamagitan ng pagtanggal ng `<src>` na bahagi, ito ay nagsasabi na gawing ang `topic` na sanga sa remote na wala, na tinatanggal ito.

O maaari mong gamitin ang mas bagong syntax (magagamit mula sa Git v1.7.0):

[source,console]
----
$ git push origin --delete topic
----
